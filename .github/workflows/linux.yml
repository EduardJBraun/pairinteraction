name: Linux

on: [push, pull_request]

# https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  CTEST_PARALLEL_LEVEL: 2

jobs:
  debian:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/pairinteraction/pairinteraction-debian:master
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
        submodules: true
    - name: Fixup Run actions/checkout@v1
      run: git config --global --add safe.directory '*'
    - name: Build
      run: |
        cmake -S . -B build/ -DWITH_COVERAGE=On -DWITH_JULIA=On
        cmake --build build/ -- --keep-going
        cmake --build build/ --target check -- --keep-going
    - name: Documentation
      run: |
        lcov --directory . --capture --output-file coverage.info;
        lcov --remove coverage.info '/usr/*' '*/build/*' '*/eigen/*' '*/wignerSymbols/*' --output-file coverage.info;
        cmake --build . --target doc -- --keep-going
        genhtml coverage.info --output-directory doc/coverage/html/
      working-directory: build/
    - name: Prepare pages
      run: |
        mkdir -p public/doxygen/ public/sphinx/ public/coverage/
        cp -r build/doc/doxygen/html public/doxygen/
        cp -r build/doc/sphinx/html public/sphinx/
        cp -r build/doc/coverage/html public/coverage/
    - name: Deploy pages
      if: github.ref == 'refs/heads/master'
      uses: JamesIves/github-pages-deploy-action@v4.3.3
      with:
        branch: gh-pages
        folder: public
        single-commit: true

  pyuic5:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/pairinteraction/pairinteraction-ubuntu:master
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
        submodules: true
    - name: Fixup Run actions/checkout@v1
      run: git config --global --add safe.directory '*'
    - name: pyuic5
      run: |
        pyuic5 --output plotter.py pairinteraction_gui/plotter.ui
    - uses: actions/upload-artifact@v1
      with:
        name: plotter.py
        path: plotter.py

  manylinux:
    runs-on: ubuntu-latest
    needs: pyuic5
    container:
      image: ghcr.io/pairinteraction/pairinteraction-manylinux:master
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
        submodules: true
    - name: Fixup Run actions/checkout@v1
      run: git config --global --add safe.directory '*'
    - uses: actions/download-artifact@v1
      with:
        name: plotter.py
        path: build/pairinteraction_gui/pairinteraction
    - name: Build
      run: |
        cmake -S . -B build/ -DPYTHON_INCLUDE_DIR=${PYTHON_INCLUDE_DIR} -DPYTHON_LIBRARY=/make/cmake/happy/
        cmake --build build/ -- --keep-going
        cmake --build build/ --target check -- --keep-going
    - name: Wheel
      run: |
        python setup.py bdist_wheel --python-tag py3 --plat-name "$AUDITWHEEL_PLAT"
        auditwheel repair dist/*.whl --plat "$AUDITWHEEL_PLAT"
      working-directory: build/
    - uses: actions/upload-artifact@v1
      with:
        name: pairinteraction-manylinux-wheel
        path: build/wheelhouse/

  opensuse:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/pairinteraction/pairinteraction-opensuse:master
    env:
      package: pairinteraction-install-opensuse.rpm
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
        submodules: true
    - name: Fixup Run actions/checkout@v1
      run: git config --global --add safe.directory '*'
    - name: Build
      run: |
        (mkdir build && cd build && cmake -DWITH_JULIA=On -DCPACK_PACKAGE_FILE_NAME="${package}" ..)
        cmake --build build/ -- --keep-going
        cmake --build build/ --target check -- --keep-going
    - name: Package
      run: |
        cmake --build build/ --target package -- --keep-going
    - uses: actions/upload-artifact@v1
      with:
        name: ${{ env.package }}
        path: build/${{ env.package }}

  fix-style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/pairinteraction/pairinteraction-static-analysis:master
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
        submodules: true
    - name: Fixup Run actions/checkout@v1
      run: git config --global --add safe.directory '*'
    - name: Fix style
      run: |
        find pairinteraction -name "*.h" -or -name "*.cpp" -print0 |
            xargs -0 -P 0 -I '{}' -t clang-format -i -style=file "{}"
        # FIXME: Currently ignoring E225 and E226 to prevent changing @LIBNAME@ to @ LIBNAME @
        find testsuite -name "*.py" -print0 |
            xargs -0 -P 0 -I '{}' -t autopep8 --max-line-length 120 --aggressive --ignore E225,E226 --in-place "{}"
        find pairinteraction_gui/pairinteraction -name "*.py" -print0 |
            xargs -0 -P 0 -I '{}' -t autopep8 --max-line-length 120 --aggressive --in-place "{}"
        git diff --output=format.patch --exit-code || { cat format.patch; false; }
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: format.patch
        path: format.patch

  static-analysis:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/pairinteraction/pairinteraction-static-analysis:master
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
        submodules: true
    - name: Fixup Run actions/checkout@v1
      run: git config --global --add safe.directory '*'
    - name: Build
      run: |
        (mkdir build && cd build && cmake -DWITH_CLANG_TIDY=On -DWITH_JULIA=On -DWITH_GUI=Off ..)
        cmake --build build/ -- --keep-going
        cmake --build build/ --target check -- --keep-going

  ubuntu:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/pairinteraction/pairinteraction-ubuntu:master
    env:
      package: pairinteraction-install-ubuntu-bionic.deb
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0
        submodules: true
    - name: Fixup Run actions/checkout@v1
      run: git config --global --add safe.directory '*'
    - name: Build
      run: |
        (mkdir build && cd build && cmake -DWITH_JULIA=On -DCPACK_PACKAGE_FILE_NAME="${package}" ..)
        cmake --build build/ -- --keep-going
        cmake --build build/ --target check -- --keep-going
    - name: Package
      run: |
        cmake --build build/ --target package -- --keep-going
    - uses: actions/upload-artifact@v1
      with:
        name: ${{ env.package }}
        path: build/${{ env.package }}
